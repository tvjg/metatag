// Generated by CoffeeScript 1.3.3
var BitPaddedInt, FRAMES, FRAMES_2_2, ID3, fs, _;

fs = require('fs');

_ = require('underscore');

BitPaddedInt = require('./BitPaddedInt.js');

ID3 = (function() {

  function ID3(filepath) {
    this.__readbytes = 0;
    this.frames = [];
    this.unknownFrames = [];
    if (filepath != null) {
      this.load(filepath);
    }
  }

  ID3.prototype.fullRead = function(size) {
    var buff, bytesRead;
    if (size < 0) {
      throw new Error("Requested bytes " + size + " less than zero");
    }
    if (size > this.__filesize) {
      throw new Error("Requested " + size + " of " + this.__filesize + " " + this.filepath);
    }
    buff = new Buffer(size);
    bytesRead = fs.readSync(this.__fileobj, buff, 0, size, this.__readbytes);
    if (bytesRead !== size) {
      throw new Error('End of file');
    }
    this.__readbytes += bytesRead;
    return buff;
  };

  ID3.prototype.load = function(filepath) {
    var data, frame, frames, headerLoaded, readFrame;
    this.filepath = filepath;
    this.__fileobj = fs.openSync(filepath, 'r');
    this.__filesize = fs.statSync(filepath).size;
    try {
      headerLoaded = false;
      try {
        return this.loadHeader();
      } catch (err) {
        return console.log(err);
      } finally {
        if (headerLoaded) {
          if (this.version.majorRev >= 3) {
            frames = FRAMES;
          } else if (this.version.majorRev <= 2) {
            frames = FRAMES_2_2;
          }
          data = this.fullRead(this.size - 10);
          readFrame = this.getFrameReader(data, frames);
          frame = readFrame();
          while (frame !== false) {
            if (frame instanceof Frame) {
              this.frames.push(frame);
            } else if (frame != null) {
              this.unknownFrames.push(frame);
            }
          }
        }
      }
    } finally {
      fs.closeSync(this.__fileobj);
      this.__fileobj = null;
      this.__filesize = null;
    }
  };

  ID3.prototype.loadHeader = function() {
    var data, extSizeRepr, flags, id3, offset, sizeRepr, _ref;
    data = this.fullRead(10);
    offset = 0;
    id3 = data.toString('utf8', offset, offset += 3);
    this.version = {
      majorRev: data.readUInt8(offset++),
      minorRev: data.readUInt8(offset++)
    };
    flags = data.readUInt8(offset++);
    this.f_unsynch = (flags & 0x80) !== 0;
    this.f_extended = (flags & 0x40) !== 0;
    this.f_experimental = (flags & 0x20) !== 0;
    this.f_footer = (flags & 0x10) !== 0;
    sizeRepr = data.toString('utf8', offset, offset += 4);
    this.size = BitPaddedInt(sizeRepr) + 10;
    if (id3 !== 'ID3') {
      throw new Error("" + this.filepath + " doesn't start with an ID3 tag");
    }
    if ((_ref = this.version.majorRev) !== 2 && _ref !== 3 && _ref !== 4) {
      throw new Error("" + this.filepath + " ID3v2." + this.version.majorRev + " not supported");
    }
    if (this.f_extended) {
      data = this.fullRead(4);
      extSizeRepr = data.toString('utf8');
      if (_.include(FRAMES, extSizeRepr)) {
        this.f_extended = false;
        this.__extsize = 0;
        this.__readbytes -= 4;
      } else if (this.version.majorRev >= 4) {
        this.__extsize = BitPaddedInt(extSizeRepr) - 4;
      } else {
        this.__extsize = BitPaddedInt(extSizeRepr, 8);
      }
      this.__extdata = '';
      if (this.__extsize) {
        data = this.fullRead(this.__extsize);
        return this.__extdata = data.toString('hex');
      }
    }
  };

  return ID3;

})();

module.exports = ID3;

FRAMES_2_2 = {
  "BUF": "Recommended buffer size",
  "CNT": "Play counter",
  "COM": "Comments",
  "CRA": "Audio encryption",
  "CRM": "Encrypted meta frame",
  "ETC": "Event timing codes",
  "EQU": "Equalization",
  "GEO": "General encapsulated object",
  "IPL": "Involved people list",
  "LNK": "Linked information",
  "MCI": "Music CD Identifier",
  "MLL": "MPEG location lookup table",
  "PIC": "Attached picture",
  "POP": "Popularimeter",
  "REV": "Reverb",
  "RVA": "Relative volume adjustment",
  "SLT": "Synchronized lyric/text",
  "STC": "Synced tempo codes",
  "TAL": "Album/Movie/Show title",
  "TBP": "BPM (Beats Per Minute)",
  "TCM": "Composer",
  "TCO": "Content type",
  "TCR": "Copyright message",
  "TDA": "Date",
  "TDY": "Playlist delay",
  "TEN": "Encoded by",
  "TFT": "File type",
  "TIM": "Time",
  "TKE": "Initial key",
  "TLA": "Language(s)",
  "TLE": "Length",
  "TMT": "Media type",
  "TOA": "Original artist(s)/performer(s)",
  "TOF": "Original filename",
  "TOL": "Original Lyricist(s)/text writer(s)",
  "TOR": "Original release year",
  "TOT": "Original album/Movie/Show title",
  "TP1": "Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group",
  "TP2": "Band/Orchestra/Accompaniment",
  "TP3": "Conductor/Performer refinement",
  "TP4": "Interpreted, remixed, or otherwise modified by",
  "TPA": "Part of a set",
  "TPB": "Publisher",
  "TRC": "ISRC (International Standard Recording Code)",
  "TRD": "Recording dates",
  "TRK": "Track number/Position in set",
  "TSI": "Size",
  "TSS": "Software/hardware and settings used for encoding",
  "TT1": "Content group description",
  "TT2": "Title/Songname/Content description",
  "TT3": "Subtitle/Description refinement",
  "TXT": "Lyricist/text writer",
  "TXX": "User defined text information frame",
  "TYE": "Year",
  "UFI": "Unique file identifier",
  "ULT": "Unsychronized lyric/text transcription",
  "WAF": "Official audio file webpage",
  "WAR": "Official artist/performer webpage",
  "WAS": "Official audio source webpage",
  "WCM": "Commercial information",
  "WCP": "Copyright/Legal information",
  "WPB": "Publishers official webpage",
  "WXX": "User defined URL link frame"
};

FRAMES = {
  "AENC": "Audio encryption",
  "APIC": "Attached picture",
  "COMM": "Comments",
  "COMR": "Commercial frame",
  "ENCR": "Encryption method registration",
  "EQUA": "Equalization",
  "ETCO": "Event timing codes",
  "GEOB": "General encapsulated object",
  "GRID": "Group identification registration",
  "IPLS": "Involved people list",
  "LINK": "Linked information",
  "MCDI": "Music CD identifier",
  "MLLT": "MPEG location lookup table",
  "OWNE": "Ownership frame",
  "PRIV": "Private frame",
  "PCNT": "Play counter",
  "POPM": "Popularimeter",
  "POSS": "Position synchronisation frame",
  "RBUF": "Recommended buffer size",
  "RVAD": "Relative volume adjustment",
  "RVRB": "Reverb",
  "SYLT": "Synchronized lyric/text",
  "SYTC": "Synchronized tempo codes",
  "TALB": "Album/Movie/Show title",
  "TBPM": "BPM (beats per minute)",
  "TCOM": "Composer",
  "TCON": "Content type",
  "TCOP": "Copyright message",
  "TDAT": "Date",
  "TDLY": "Playlist delay",
  "TENC": "Encoded by",
  "TEXT": "Lyricist/Text writer",
  "TFLT": "File type",
  "TIME": "Time",
  "TIT1": "Content group description",
  "TIT2": "Title/songname/content description",
  "TIT3": "Subtitle/Description refinement",
  "TKEY": "Initial key",
  "TLAN": "Language(s)",
  "TLEN": "Length",
  "TMED": "Media type",
  "TOAL": "Original album/movie/show title",
  "TOFN": "Original filename",
  "TOLY": "Original lyricist(s)/text writer(s)",
  "TOPE": "Original artist(s)/performer(s)",
  "TORY": "Original release year",
  "TOWN": "File owner/licensee",
  "TPE1": "Lead performer(s)/Soloist(s)",
  "TPE2": "Band/orchestra/accompaniment",
  "TPE3": "Conductor/performer refinement",
  "TPE4": "Interpreted, remixed, or otherwise modified by",
  "TPOS": "Part of a set",
  "TPUB": "Publisher",
  "TRCK": "Track number/Position in set",
  "TRDA": "Recording dates",
  "TRSN": "Internet radio station name",
  "TRSO": "Internet radio station owner",
  "TSIZ": "Size",
  "TSRC": "ISRC (international standard recording code)",
  "TSSE": "Software/Hardware and settings used for encoding",
  "TYER": "Year",
  "TXXX": "User defined text information frame",
  "UFID": "Unique file identifier",
  "USER": "Terms of use",
  "USLT": "Unsychronized lyric/text transcription",
  "WCOM": "Commercial information",
  "WCOP": "Copyright/Legal information",
  "WOAF": "Official audio file webpage",
  "WOAR": "Official artist/performer webpage",
  "WOAS": "Official audio source webpage",
  "WORS": "Official internet radio station homepage",
  "WPAY": "Payment",
  "WPUB": "Publishers official webpage",
  "WXXX": "User defined URL link frame"
};
