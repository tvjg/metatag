// Generated by CoffeeScript 1.6.3
var $FRAMES, $FRAMES_2_2, APIC, BinaryDataSpec, ByteSpec, COM, COMM, EncodedNumericPartTextSpec, EncodedNumericTextSpec, EncodedTextSpec, EncodingSpec, FLAG23_ALTERFILE, FLAG23_ALTERTAG, FLAG23_COMPRESS, FLAG23_ENCRYPT, FLAG23_GROUP, FLAG23_READONLY, FLAG24_ALTERFILE, FLAG24_ALTERTAG, FLAG24_COMPRESS, FLAG24_DATALEN, FLAG24_ENCRYPT, FLAG24_GROUPID, FLAG24_READONLY, FLAG24_UNSYNCH, FRAMES, FRAMES_2_2, Frame, ID3BadUnsynchData, ID3JunkFrameError, Latin1TextSpec, MultiSpec, NumericPartTextFrame, NumericTextFrame, Q, StringSpec, TAL, TALB, TBP, TBPM, TCM, TCMP, TCO, TCOM, TCON, TCOP, TCP, TCR, TDA, TDAT, TDEN, TDLY, TDOR, TDRC, TDRL, TDTG, TDY, TEN, TENC, TEXT, TFLT, TFT, TIM, TIME, TIT1, TIT2, TIT3, TKE, TKEY, TLA, TLAN, TLE, TLEN, TMED, TMOO, TMT, TOA, TOAL, TOF, TOFN, TOL, TOLY, TOPE, TOR, TORY, TOT, TOWN, TP1, TP2, TP3, TP4, TPA, TPB, TPE1, TPE2, TPE3, TPE4, TPOS, TPRO, TPUB, TRC, TRCK, TRD, TRDA, TRK, TRSN, TRSO, TSI, TSIZ, TSO2, TSOA, TSOC, TSOP, TSOT, TSRC, TSS, TSSE, TSST, TT1, TT2, TT3, TXT, TXX, TXXX, TYE, TYER, TextFrame, TimeStampSpec, TimeStampTextFrame, UnicodeDecodeError, ValueError, cls, convert, isString, isUpperCaseAlphanumeric, sprintf, unsynch, _i, _j, _len, _len1, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref2, _ref20, _ref21, _ref22, _ref23, _ref24, _ref25, _ref26, _ref27, _ref28, _ref29, _ref3, _ref30, _ref31, _ref32, _ref33, _ref34, _ref35, _ref36, _ref37, _ref38, _ref39, _ref4, _ref40, _ref41, _ref42, _ref43, _ref44, _ref45, _ref46, _ref47, _ref48, _ref49, _ref5, _ref50, _ref51, _ref52, _ref53, _ref54, _ref55, _ref56, _ref57, _ref58, _ref59, _ref6, _ref60, _ref61, _ref62, _ref63, _ref64, _ref65, _ref66, _ref67, _ref68, _ref69, _ref7, _ref70, _ref71, _ref72, _ref73, _ref74, _ref75, _ref76, _ref77, _ref78, _ref79, _ref8, _ref80, _ref81, _ref82, _ref83, _ref84, _ref85, _ref86, _ref87, _ref88, _ref89, _ref9, _ref90, _ref91, _ref92, _ref93, _ref94, _ref95, _ref96,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Q = require('q');

sprintf = require("sprintf-js").sprintf;

convert = require('../text-encodings');

unsynch = require('./unsynch');

_ref = require('../errors'), ValueError = _ref.ValueError, UnicodeDecodeError = _ref.UnicodeDecodeError;

_ref1 = require('./errors'), ID3JunkFrameError = _ref1.ID3JunkFrameError, ID3BadUnsynchData = _ref1.ID3BadUnsynchData;

_ref2 = require('./framespecs'), ByteSpec = _ref2.ByteSpec, EncodingSpec = _ref2.EncodingSpec, StringSpec = _ref2.StringSpec, MultiSpec = _ref2.MultiSpec, EncodedTextSpec = _ref2.EncodedTextSpec, EncodedNumericTextSpec = _ref2.EncodedNumericTextSpec, EncodedNumericPartTextSpec = _ref2.EncodedNumericPartTextSpec, TimeStampSpec = _ref2.TimeStampSpec, Latin1TextSpec = _ref2.Latin1TextSpec, BinaryDataSpec = _ref2.BinaryDataSpec;

FLAG23_ALTERTAG = 0x8000;

FLAG23_ALTERFILE = 0x4000;

FLAG23_READONLY = 0x2000;

FLAG23_COMPRESS = 0x0080;

FLAG23_ENCRYPT = 0x0040;

FLAG23_GROUP = 0x0020;

FLAG24_ALTERTAG = 0x4000;

FLAG24_ALTERFILE = 0x2000;

FLAG24_READONLY = 0x1000;

FLAG24_GROUPID = 0x0040;

FLAG24_COMPRESS = 0x0008;

FLAG24_ENCRYPT = 0x0004;

FLAG24_UNSYNCH = 0x0002;

FLAG24_DATALEN = 0x0001;

isString = function(a) {
  return Object.prototype.toString.call(a) === "[object String]";
};

Frame = (function() {
  var nullChars;

  nullChars = /^(?:0{2})+|(?:0{2})+$/g;

  function Frame(fields) {
    var checker, validated, _i, _len, _ref3;
    Object.defineProperty(this, 'FrameID', {
      enumerable: true,
      get: function() {
        return this.constructor.name;
      }
    });
    Object.defineProperty(this, 'HashKey', {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.FrameID;
      }
    });
    if (!(arguments.length > 0)) {
      return this;
    }
    _ref3 = this.framespec;
    for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
      checker = _ref3[_i];
      validated = checker.validate(this, fields[checker.name]);
      this[checker.name] = validated;
    }
  }

  Frame.prototype._readData = function(data) {
    var err, odata, spec, value, _i, _len, _ref3, _ref4;
    odata = data;
    _ref3 = this.framespec;
    for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
      spec = _ref3[_i];
      if (!(data.length > 0)) {
        throw new ID3JunkFrameError;
      }
      try {
        _ref4 = spec.read(this, data), value = _ref4[0], data = _ref4[1];
      } catch (_error) {
        err = _error;
        if (!(err instanceof UnicodeDecodeError)) {
          throw err;
        }
        throw new ID3JunkFrameError;
      }
      this[spec.name] = value;
    }
    if (data.toString('hex').replace(nullChars, '')) {
      return console.warn("Leftover data: " + this.FrameID + ": ", data, " (from ", odata, ")");
    }
  };

  return Frame;

})();

Frame.toString = function() {
  return this.name;
};

isUpperCaseAlphanumeric = /^[A-Z0-9]+$/;

Frame.isValidFrameId = function(frameId) {
  return isUpperCaseAlphanumeric.test(frameId);
};

Frame.fromData = function(cls, id3, tflags, data) {
  var datalen_bytes, err, makeFrame, zlib;
  makeFrame = function(data) {
    var frame;
    frame = new cls();
    frame._rawdata = data;
    frame._flags = tflags;
    frame._readData(data);
    return frame;
  };
  if (4 <= id3.version.minor) {
    if (tflags & FLAG24_ENCRYPT) {
      throw new ID3EncryptionUnsupportedError;
    }
    if (tflags & (FLAG24_COMPRESS | FLAG24_DATALEN)) {
      datalen_bytes = data.slice(0, 4);
      data = data.slice(4);
    }
    if (tflags & FLAG24_UNSYNCH || id3.f_unsynch) {
      try {
        data = unsynch.decode(data);
      } catch (_error) {
        err = _error;
        if (!(err instanceof ValueError)) {
          throw err;
        }
        if (id3.PEDANTIC) {
          throw new ID3BadUnsynchData("" + err.message + ": " + data);
        }
      }
    }
    if (tflags & FLAG24_COMPRESS) {
      zlib = require('zlib');
      return Q.nfcall(zlib.inflate, data).fail(function(err) {
        data = Buffer.concat([datalen_bytes, data]);
        return Q.nfcall(zlib.inflate, data);
      }).then(function(inflatedData) {
        return makeFrame(inflatedData);
      }).fail(function(err) {
        if (err && id3.PEDANTIC) {
          throw new ID3BadCompressedData("" + err.message + ": " + data);
        }
      });
    }
  } else if (3 <= id3.version.minor) {
    if (tflags & FLAG23_ENCRYPT) {
      throw new ID3EncryptionUnsupportedError;
    }
    if (tflags & FLAG23_COMPRESS) {
      zlib = require('zlib');
      data = data.slice(4);
      return Q.nfcall(zlib.inflate, data).then(function(inflatedData) {
        return makeFrame(inflatedData);
      }).fail(function(err) {
        if (err && id3.PEDANTIC) {
          throw new ID3BadCompressedData("" + err.message + ": " + data);
        }
      });
    }
  }
  return Q.fcall(makeFrame, data);
};

TextFrame = (function(_super) {
  var sep;

  __extends(TextFrame, _super);

  function TextFrame() {
    _ref3 = TextFrame.__super__.constructor.apply(this, arguments);
    return _ref3;
  }

  TextFrame.prototype.framespec = [EncodingSpec('encoding'), MultiSpec('text', EncodedTextSpec('text'), sep = '\u0000')];

  TextFrame.prototype.toString = function() {
    return this.text.join('\u0000');
  };

  TextFrame.prototype.valueOf = function() {
    return this.text;
  };

  return TextFrame;

})(Frame);

NumericTextFrame = (function(_super) {
  __extends(NumericTextFrame, _super);

  function NumericTextFrame() {
    _ref4 = NumericTextFrame.__super__.constructor.apply(this, arguments);
    return _ref4;
  }

  NumericTextFrame.prototype.framespec = [EncodingSpec('encoding'), MultiSpec('text', EncodedNumericTextSpec('text'), '\u0000')];

  NumericTextFrame.prototype.valueOf = function() {
    return parseInt(this.text[0], 10);
  };

  return NumericTextFrame;

})(TextFrame);

NumericPartTextFrame = (function(_super) {
  __extends(NumericPartTextFrame, _super);

  function NumericPartTextFrame() {
    _ref5 = NumericPartTextFrame.__super__.constructor.apply(this, arguments);
    return _ref5;
  }

  NumericPartTextFrame.prototype.framespec = [EncodingSpec('encoding'), MultiSpec('text', EncodedNumericPartTextSpec('text'), '\u0000')];

  NumericPartTextFrame.prototype.valueOf = function() {
    return parseInt(this.text[0].split('/')[0], 10);
  };

  return NumericPartTextFrame;

})(TextFrame);

TimeStampTextFrame = (function(_super) {
  __extends(TimeStampTextFrame, _super);

  function TimeStampTextFrame() {
    _ref6 = TimeStampTextFrame.__super__.constructor.apply(this, arguments);
    return _ref6;
  }

  TimeStampTextFrame.prototype.framespec = [EncodingSpec('encoding'), MultiSpec('text', TimeStampSpec('stamp'), ',')];

  TimeStampTextFrame.prototype.toString = function() {
    var stamp;
    return ((function() {
      var _i, _len, _ref7, _results;
      _ref7 = this.text;
      _results = [];
      for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
        stamp = _ref7[_i];
        _results.push(stamp.text);
      }
      return _results;
    }).call(this)).join(',');
  };

  return TimeStampTextFrame;

})(TextFrame);

COMM = (function(_super) {
  __extends(COMM, _super);

  COMM.prototype.framespec = [EncodingSpec('encoding'), StringSpec('lang', 3), EncodedTextSpec('desc'), MultiSpec('text', EncodedTextSpec('text'), '\u0000')];

  function COMM() {
    COMM.__super__.constructor.apply(this, arguments);
    Object.defineProperty(this, 'HashKey', {
      enumerable: true,
      get: function() {
        return sprintf('%s:%s:%s', this.FrameID, this.desc || 'None', this.lang || 'None');
      }
    });
  }

  return COMM;

})(TextFrame);

TCON = (function(_super) {
  var GENRES, digit, genre_re, startsWithParens, strDigits;

  __extends(TCON, _super);

  GENRES = require('./constants').GENRES;

  strDigits = (function() {
    var _i, _results;
    _results = [];
    for (digit = _i = 0; _i <= 9; digit = ++_i) {
      _results.push(digit.toString());
    }
    return _results;
  })();

  genre_re = /((?:\(([0-9]+|RX|CR)\))*)(.+)?/;

  startsWithParens = /^\(\(/;

  function TCON() {
    TCON.__super__.constructor.apply(this, arguments);
    Object.defineProperty(this, 'genres', {
      get: this.__get_genres,
      set: this.__set_genres
    });
  }

  TCON.prototype.__get_genres = function() {
    var genres;
    genres = [];
    this.text.forEach(function(value) {
      var d, dummy, genreid, genrename, gid, gids, idx, newGenres, notDigits, wholematch, _ref7;
      notDigits = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = value.length; _i < _len; _i++) {
          d = value[_i];
          if (__indexOf.call(strDigits, d) < 0) {
            _results.push(d);
          }
        }
        return _results;
      })();
      if (value && notDigits.length === 0) {
        idx = +value;
        return genres.push(GENRES[idx] || 'Unknown');
      } else if (value === 'CR') {
        return genres.push('Cover');
      } else if (value === 'RX') {
        return genres.push('Remix');
      } else if (value) {
        newGenres = [];
        _ref7 = value.match(genre_re), wholematch = _ref7[0], genreid = _ref7[1], dummy = _ref7[2], genrename = _ref7[3];
        if (genreid) {
          gids = (function() {
            var _i, _len, _ref8, _results;
            _ref8 = genreid.slice(1, -1).split(')(');
            _results = [];
            for (_i = 0, _len = _ref8.length; _i < _len; _i++) {
              gid = _ref8[_i];
              _results.push(gid);
            }
            return _results;
          })();
          gids.forEach(function(gid) {
            idx = +gid;
            notDigits = (function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = gid.length; _i < _len; _i++) {
                d = gid[_i];
                if (__indexOf.call(strDigits, d) < 0) {
                  _results.push(d);
                }
              }
              return _results;
            })();
            if (notDigits.length === 0 && idx < GENRES.length) {
              gid = GENRES[idx];
              return newGenres.push(gid);
            } else if (gid === "CR") {
              return newGenres.push('Cover');
            } else if (gid === "RX") {
              return newGenres.push('Remix');
            } else {
              return newGenres.push('Unknown');
            }
          });
        }
        if (genrename) {
          if (startsWithParens.test(genrename)) {
            genrename = genrename.slice(1);
          }
          if (__indexOf.call(newGenres, genrename) < 0) {
            newGenres.push(genrename);
          }
        }
        return genres = genres.concat(newGenres);
      }
    });
    return genres;
  };

  TCON.prototype.__set_genres = function(genres) {
    var genre;
    if (isString(genres)) {
      genres = [genres];
    }
    return this.text = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = genres.length; _i < _len; _i++) {
        genre = genres[_i];
        _results.push(genre);
      }
      return _results;
    })();
  };

  TCON.prototype.__decode = function(value) {
    var enc;
    if (!isString(value)) {
      return value;
    }
    enc = EncodedTextSpec._encodings[this.encoding][0];
    return (convert(value)).from(enc);
  };

  return TCON;

})(TextFrame);

APIC = (function(_super) {
  __extends(APIC, _super);

  function APIC() {
    _ref7 = APIC.__super__.constructor.apply(this, arguments);
    return _ref7;
  }

  APIC.prototype.framespec = [EncodingSpec('encoding'), Latin1TextSpec('mime'), ByteSpec('type'), EncodedTextSpec('desc'), BinaryDataSpec('data')];

  return APIC;

})(Frame);

TXXX = (function(_super) {
  __extends(TXXX, _super);

  TXXX.prototype.framespec = [EncodingSpec('encoding'), EncodedTextSpec('desc'), MultiSpec('text', EncodedTextSpec('text'), '\u0000')];

  function TXXX() {
    TXXX.__super__.constructor.apply(this, arguments);
    Object.defineProperty(this, 'HashKey', {
      enumerable: true,
      get: function() {
        return sprintf('%s:%s', this.FrameID, this.desc || 'None');
      }
    });
  }

  return TXXX;

})(TextFrame);

FRAMES = {
  "AENC": "Audio encryption",
  "COMR": "Commercial frame",
  "ENCR": "Encryption method registration",
  "EQUA": "Equalization",
  "ETCO": "Event timing codes",
  "GEOB": "General encapsulated object",
  "GRID": "Group identification registration",
  "IPLS": "Involved people list",
  "LINK": "Linked information",
  "MCDI": "Music CD identifier",
  "MLLT": "MPEG location lookup table",
  "OWNE": "Ownership frame",
  "PRIV": "Private frame",
  "PCNT": "Play counter",
  "POPM": "Popularimeter",
  "POSS": "Position synchronisation frame",
  "RBUF": "Recommended buffer size",
  "RVAD": "Relative volume adjustment",
  "RVRB": "Reverb",
  "SYLT": "Synchronized lyric/text",
  "SYTC": "Synchronized tempo codes",
  "UFID": "Unique file identifier",
  "USER": "Terms of use",
  "USLT": "Unsychronized lyric/text transcription",
  "WCOM": "Commercial information",
  "WCOP": "Copyright/Legal information",
  "WOAF": "Official audio file webpage",
  "WOAR": "Official artist/performer webpage",
  "WOAS": "Official audio source webpage",
  "WORS": "Official internet radio station homepage",
  "WPAY": "Payment",
  "WPUB": "Publishers official webpage",
  "WXXX": "User defined URL link frame"
};

$FRAMES = [
  TALB = (function(_super) {
    __extends(TALB, _super);

    function TALB() {
      _ref8 = TALB.__super__.constructor.apply(this, arguments);
      return _ref8;
    }

    return TALB;

  })(TextFrame), TBPM = (function(_super) {
    __extends(TBPM, _super);

    function TBPM() {
      _ref9 = TBPM.__super__.constructor.apply(this, arguments);
      return _ref9;
    }

    return TBPM;

  })(NumericTextFrame), TCOM = (function(_super) {
    __extends(TCOM, _super);

    function TCOM() {
      _ref10 = TCOM.__super__.constructor.apply(this, arguments);
      return _ref10;
    }

    return TCOM;

  })(TextFrame), TCON, TCOP = (function(_super) {
    __extends(TCOP, _super);

    function TCOP() {
      _ref11 = TCOP.__super__.constructor.apply(this, arguments);
      return _ref11;
    }

    return TCOP;

  })(TextFrame), TCMP = (function(_super) {
    __extends(TCMP, _super);

    function TCMP() {
      _ref12 = TCMP.__super__.constructor.apply(this, arguments);
      return _ref12;
    }

    return TCMP;

  })(NumericTextFrame), TDAT = (function(_super) {
    __extends(TDAT, _super);

    function TDAT() {
      _ref13 = TDAT.__super__.constructor.apply(this, arguments);
      return _ref13;
    }

    return TDAT;

  })(TextFrame), TDEN = (function(_super) {
    __extends(TDEN, _super);

    function TDEN() {
      _ref14 = TDEN.__super__.constructor.apply(this, arguments);
      return _ref14;
    }

    return TDEN;

  })(TimeStampTextFrame), TDOR = (function(_super) {
    __extends(TDOR, _super);

    function TDOR() {
      _ref15 = TDOR.__super__.constructor.apply(this, arguments);
      return _ref15;
    }

    return TDOR;

  })(TimeStampTextFrame), TDLY = (function(_super) {
    __extends(TDLY, _super);

    function TDLY() {
      _ref16 = TDLY.__super__.constructor.apply(this, arguments);
      return _ref16;
    }

    return TDLY;

  })(NumericTextFrame), TDRC = (function(_super) {
    __extends(TDRC, _super);

    function TDRC() {
      _ref17 = TDRC.__super__.constructor.apply(this, arguments);
      return _ref17;
    }

    return TDRC;

  })(TimeStampTextFrame), TDRL = (function(_super) {
    __extends(TDRL, _super);

    function TDRL() {
      _ref18 = TDRL.__super__.constructor.apply(this, arguments);
      return _ref18;
    }

    return TDRL;

  })(TimeStampTextFrame), TDTG = (function(_super) {
    __extends(TDTG, _super);

    function TDTG() {
      _ref19 = TDTG.__super__.constructor.apply(this, arguments);
      return _ref19;
    }

    return TDTG;

  })(TimeStampTextFrame), TENC = (function(_super) {
    __extends(TENC, _super);

    function TENC() {
      _ref20 = TENC.__super__.constructor.apply(this, arguments);
      return _ref20;
    }

    return TENC;

  })(TextFrame), TEXT = (function(_super) {
    __extends(TEXT, _super);

    function TEXT() {
      _ref21 = TEXT.__super__.constructor.apply(this, arguments);
      return _ref21;
    }

    return TEXT;

  })(TextFrame), TFLT = (function(_super) {
    __extends(TFLT, _super);

    function TFLT() {
      _ref22 = TFLT.__super__.constructor.apply(this, arguments);
      return _ref22;
    }

    return TFLT;

  })(TextFrame), TIME = (function(_super) {
    __extends(TIME, _super);

    function TIME() {
      _ref23 = TIME.__super__.constructor.apply(this, arguments);
      return _ref23;
    }

    return TIME;

  })(TextFrame), TIT1 = (function(_super) {
    __extends(TIT1, _super);

    function TIT1() {
      _ref24 = TIT1.__super__.constructor.apply(this, arguments);
      return _ref24;
    }

    return TIT1;

  })(TextFrame), TIT2 = (function(_super) {
    __extends(TIT2, _super);

    function TIT2() {
      _ref25 = TIT2.__super__.constructor.apply(this, arguments);
      return _ref25;
    }

    return TIT2;

  })(TextFrame), TIT3 = (function(_super) {
    __extends(TIT3, _super);

    function TIT3() {
      _ref26 = TIT3.__super__.constructor.apply(this, arguments);
      return _ref26;
    }

    return TIT3;

  })(TextFrame), TKEY = (function(_super) {
    __extends(TKEY, _super);

    function TKEY() {
      _ref27 = TKEY.__super__.constructor.apply(this, arguments);
      return _ref27;
    }

    return TKEY;

  })(TextFrame), TLAN = (function(_super) {
    __extends(TLAN, _super);

    function TLAN() {
      _ref28 = TLAN.__super__.constructor.apply(this, arguments);
      return _ref28;
    }

    return TLAN;

  })(TextFrame), TLEN = (function(_super) {
    __extends(TLEN, _super);

    function TLEN() {
      _ref29 = TLEN.__super__.constructor.apply(this, arguments);
      return _ref29;
    }

    return TLEN;

  })(NumericTextFrame), TMED = (function(_super) {
    __extends(TMED, _super);

    function TMED() {
      _ref30 = TMED.__super__.constructor.apply(this, arguments);
      return _ref30;
    }

    return TMED;

  })(TextFrame), TMOO = (function(_super) {
    __extends(TMOO, _super);

    function TMOO() {
      _ref31 = TMOO.__super__.constructor.apply(this, arguments);
      return _ref31;
    }

    return TMOO;

  })(TextFrame), TOAL = (function(_super) {
    __extends(TOAL, _super);

    function TOAL() {
      _ref32 = TOAL.__super__.constructor.apply(this, arguments);
      return _ref32;
    }

    return TOAL;

  })(TextFrame), TOFN = (function(_super) {
    __extends(TOFN, _super);

    function TOFN() {
      _ref33 = TOFN.__super__.constructor.apply(this, arguments);
      return _ref33;
    }

    return TOFN;

  })(TextFrame), TOLY = (function(_super) {
    __extends(TOLY, _super);

    function TOLY() {
      _ref34 = TOLY.__super__.constructor.apply(this, arguments);
      return _ref34;
    }

    return TOLY;

  })(TextFrame), TOPE = (function(_super) {
    __extends(TOPE, _super);

    function TOPE() {
      _ref35 = TOPE.__super__.constructor.apply(this, arguments);
      return _ref35;
    }

    return TOPE;

  })(TextFrame), TORY = (function(_super) {
    __extends(TORY, _super);

    function TORY() {
      _ref36 = TORY.__super__.constructor.apply(this, arguments);
      return _ref36;
    }

    return TORY;

  })(NumericTextFrame), TOWN = (function(_super) {
    __extends(TOWN, _super);

    function TOWN() {
      _ref37 = TOWN.__super__.constructor.apply(this, arguments);
      return _ref37;
    }

    return TOWN;

  })(TextFrame), TPE1 = (function(_super) {
    __extends(TPE1, _super);

    function TPE1() {
      _ref38 = TPE1.__super__.constructor.apply(this, arguments);
      return _ref38;
    }

    return TPE1;

  })(TextFrame), TPE2 = (function(_super) {
    __extends(TPE2, _super);

    function TPE2() {
      _ref39 = TPE2.__super__.constructor.apply(this, arguments);
      return _ref39;
    }

    return TPE2;

  })(TextFrame), TPE3 = (function(_super) {
    __extends(TPE3, _super);

    function TPE3() {
      _ref40 = TPE3.__super__.constructor.apply(this, arguments);
      return _ref40;
    }

    return TPE3;

  })(TextFrame), TPE4 = (function(_super) {
    __extends(TPE4, _super);

    function TPE4() {
      _ref41 = TPE4.__super__.constructor.apply(this, arguments);
      return _ref41;
    }

    return TPE4;

  })(TextFrame), TPOS = (function(_super) {
    __extends(TPOS, _super);

    function TPOS() {
      _ref42 = TPOS.__super__.constructor.apply(this, arguments);
      return _ref42;
    }

    return TPOS;

  })(NumericPartTextFrame), TPRO = (function(_super) {
    __extends(TPRO, _super);

    function TPRO() {
      _ref43 = TPRO.__super__.constructor.apply(this, arguments);
      return _ref43;
    }

    return TPRO;

  })(TextFrame), TPUB = (function(_super) {
    __extends(TPUB, _super);

    function TPUB() {
      _ref44 = TPUB.__super__.constructor.apply(this, arguments);
      return _ref44;
    }

    return TPUB;

  })(TextFrame), TRCK = (function(_super) {
    __extends(TRCK, _super);

    function TRCK() {
      _ref45 = TRCK.__super__.constructor.apply(this, arguments);
      return _ref45;
    }

    return TRCK;

  })(NumericPartTextFrame), TRDA = (function(_super) {
    __extends(TRDA, _super);

    function TRDA() {
      _ref46 = TRDA.__super__.constructor.apply(this, arguments);
      return _ref46;
    }

    return TRDA;

  })(TextFrame), TRSN = (function(_super) {
    __extends(TRSN, _super);

    function TRSN() {
      _ref47 = TRSN.__super__.constructor.apply(this, arguments);
      return _ref47;
    }

    return TRSN;

  })(TextFrame), TRSO = (function(_super) {
    __extends(TRSO, _super);

    function TRSO() {
      _ref48 = TRSO.__super__.constructor.apply(this, arguments);
      return _ref48;
    }

    return TRSO;

  })(TextFrame), TSIZ = (function(_super) {
    __extends(TSIZ, _super);

    function TSIZ() {
      _ref49 = TSIZ.__super__.constructor.apply(this, arguments);
      return _ref49;
    }

    return TSIZ;

  })(NumericTextFrame), TSO2 = (function(_super) {
    __extends(TSO2, _super);

    function TSO2() {
      _ref50 = TSO2.__super__.constructor.apply(this, arguments);
      return _ref50;
    }

    return TSO2;

  })(TextFrame), TSOA = (function(_super) {
    __extends(TSOA, _super);

    function TSOA() {
      _ref51 = TSOA.__super__.constructor.apply(this, arguments);
      return _ref51;
    }

    return TSOA;

  })(TextFrame), TSOC = (function(_super) {
    __extends(TSOC, _super);

    function TSOC() {
      _ref52 = TSOC.__super__.constructor.apply(this, arguments);
      return _ref52;
    }

    return TSOC;

  })(TextFrame), TSOP = (function(_super) {
    __extends(TSOP, _super);

    function TSOP() {
      _ref53 = TSOP.__super__.constructor.apply(this, arguments);
      return _ref53;
    }

    return TSOP;

  })(TextFrame), TSOT = (function(_super) {
    __extends(TSOT, _super);

    function TSOT() {
      _ref54 = TSOT.__super__.constructor.apply(this, arguments);
      return _ref54;
    }

    return TSOT;

  })(TextFrame), TSRC = (function(_super) {
    __extends(TSRC, _super);

    function TSRC() {
      _ref55 = TSRC.__super__.constructor.apply(this, arguments);
      return _ref55;
    }

    return TSRC;

  })(TextFrame), TSSE = (function(_super) {
    __extends(TSSE, _super);

    function TSSE() {
      _ref56 = TSSE.__super__.constructor.apply(this, arguments);
      return _ref56;
    }

    return TSSE;

  })(TextFrame), TSST = (function(_super) {
    __extends(TSST, _super);

    function TSST() {
      _ref57 = TSST.__super__.constructor.apply(this, arguments);
      return _ref57;
    }

    return TSST;

  })(TextFrame), TYER = (function(_super) {
    __extends(TYER, _super);

    function TYER() {
      _ref58 = TYER.__super__.constructor.apply(this, arguments);
      return _ref58;
    }

    return TYER;

  })(NumericTextFrame), TXXX, COMM, APIC
];

for (_i = 0, _len = $FRAMES.length; _i < _len; _i++) {
  cls = $FRAMES[_i];
  FRAMES[cls] = cls;
}

FRAMES_2_2 = {
  "BUF": "Recommended buffer size",
  "CNT": "Play counter",
  "CRA": "Audio encryption",
  "CRM": "Encrypted meta frame",
  "ETC": "Event timing codes",
  "EQU": "Equalization",
  "GEO": "General encapsulated object",
  "IPL": "Involved people list",
  "LNK": "Linked information",
  "MCI": "Music CD Identifier",
  "MLL": "MPEG location lookup table",
  "PIC": "Attached picture",
  "POP": "Popularimeter",
  "REV": "Reverb",
  "RVA": "Relative volume adjustment",
  "SLT": "Synchronized lyric/text",
  "STC": "Synced tempo codes",
  "UFI": "Unique file identifier",
  "ULT": "Unsychronized lyric/text transcription",
  "WAF": "Official audio file webpage",
  "WAR": "Official artist/performer webpage",
  "WAS": "Official audio source webpage",
  "WCM": "Commercial information",
  "WCP": "Copyright/Legal information",
  "WPB": "Publishers official webpage",
  "WXX": "User defined URL link frame"
};

$FRAMES_2_2 = [
  TT1 = (function(_super) {
    __extends(TT1, _super);

    function TT1() {
      _ref59 = TT1.__super__.constructor.apply(this, arguments);
      return _ref59;
    }

    return TT1;

  })(TIT1), TT2 = (function(_super) {
    __extends(TT2, _super);

    function TT2() {
      _ref60 = TT2.__super__.constructor.apply(this, arguments);
      return _ref60;
    }

    return TT2;

  })(TIT2), TT3 = (function(_super) {
    __extends(TT3, _super);

    function TT3() {
      _ref61 = TT3.__super__.constructor.apply(this, arguments);
      return _ref61;
    }

    return TT3;

  })(TIT3), TP1 = (function(_super) {
    __extends(TP1, _super);

    function TP1() {
      _ref62 = TP1.__super__.constructor.apply(this, arguments);
      return _ref62;
    }

    return TP1;

  })(TPE1), TP2 = (function(_super) {
    __extends(TP2, _super);

    function TP2() {
      _ref63 = TP2.__super__.constructor.apply(this, arguments);
      return _ref63;
    }

    return TP2;

  })(TPE2), TP3 = (function(_super) {
    __extends(TP3, _super);

    function TP3() {
      _ref64 = TP3.__super__.constructor.apply(this, arguments);
      return _ref64;
    }

    return TP3;

  })(TPE3), TP4 = (function(_super) {
    __extends(TP4, _super);

    function TP4() {
      _ref65 = TP4.__super__.constructor.apply(this, arguments);
      return _ref65;
    }

    return TP4;

  })(TPE4), TCM = (function(_super) {
    __extends(TCM, _super);

    function TCM() {
      _ref66 = TCM.__super__.constructor.apply(this, arguments);
      return _ref66;
    }

    return TCM;

  })(TCOM), TXT = (function(_super) {
    __extends(TXT, _super);

    function TXT() {
      _ref67 = TXT.__super__.constructor.apply(this, arguments);
      return _ref67;
    }

    return TXT;

  })(TEXT), TLA = (function(_super) {
    __extends(TLA, _super);

    function TLA() {
      _ref68 = TLA.__super__.constructor.apply(this, arguments);
      return _ref68;
    }

    return TLA;

  })(TLAN), TCO = (function(_super) {
    __extends(TCO, _super);

    function TCO() {
      _ref69 = TCO.__super__.constructor.apply(this, arguments);
      return _ref69;
    }

    return TCO;

  })(TCON), TAL = (function(_super) {
    __extends(TAL, _super);

    function TAL() {
      _ref70 = TAL.__super__.constructor.apply(this, arguments);
      return _ref70;
    }

    return TAL;

  })(TALB), TPA = (function(_super) {
    __extends(TPA, _super);

    function TPA() {
      _ref71 = TPA.__super__.constructor.apply(this, arguments);
      return _ref71;
    }

    return TPA;

  })(TPOS), TRK = (function(_super) {
    __extends(TRK, _super);

    function TRK() {
      _ref72 = TRK.__super__.constructor.apply(this, arguments);
      return _ref72;
    }

    return TRK;

  })(TRCK), TRC = (function(_super) {
    __extends(TRC, _super);

    function TRC() {
      _ref73 = TRC.__super__.constructor.apply(this, arguments);
      return _ref73;
    }

    return TRC;

  })(TSRC), TYE = (function(_super) {
    __extends(TYE, _super);

    function TYE() {
      _ref74 = TYE.__super__.constructor.apply(this, arguments);
      return _ref74;
    }

    return TYE;

  })(TYER), TDA = (function(_super) {
    __extends(TDA, _super);

    function TDA() {
      _ref75 = TDA.__super__.constructor.apply(this, arguments);
      return _ref75;
    }

    return TDA;

  })(TDAT), TIM = (function(_super) {
    __extends(TIM, _super);

    function TIM() {
      _ref76 = TIM.__super__.constructor.apply(this, arguments);
      return _ref76;
    }

    return TIM;

  })(TIME), TRD = (function(_super) {
    __extends(TRD, _super);

    function TRD() {
      _ref77 = TRD.__super__.constructor.apply(this, arguments);
      return _ref77;
    }

    return TRD;

  })(TRDA), TMT = (function(_super) {
    __extends(TMT, _super);

    function TMT() {
      _ref78 = TMT.__super__.constructor.apply(this, arguments);
      return _ref78;
    }

    return TMT;

  })(TMED), TFT = (function(_super) {
    __extends(TFT, _super);

    function TFT() {
      _ref79 = TFT.__super__.constructor.apply(this, arguments);
      return _ref79;
    }

    return TFT;

  })(TFLT), TBP = (function(_super) {
    __extends(TBP, _super);

    function TBP() {
      _ref80 = TBP.__super__.constructor.apply(this, arguments);
      return _ref80;
    }

    return TBP;

  })(TBPM), TCP = (function(_super) {
    __extends(TCP, _super);

    function TCP() {
      _ref81 = TCP.__super__.constructor.apply(this, arguments);
      return _ref81;
    }

    return TCP;

  })(TCMP), TCR = (function(_super) {
    __extends(TCR, _super);

    function TCR() {
      _ref82 = TCR.__super__.constructor.apply(this, arguments);
      return _ref82;
    }

    return TCR;

  })(TCOP), TPB = (function(_super) {
    __extends(TPB, _super);

    function TPB() {
      _ref83 = TPB.__super__.constructor.apply(this, arguments);
      return _ref83;
    }

    return TPB;

  })(TPUB), TEN = (function(_super) {
    __extends(TEN, _super);

    function TEN() {
      _ref84 = TEN.__super__.constructor.apply(this, arguments);
      return _ref84;
    }

    return TEN;

  })(TENC), TSS = (function(_super) {
    __extends(TSS, _super);

    function TSS() {
      _ref85 = TSS.__super__.constructor.apply(this, arguments);
      return _ref85;
    }

    return TSS;

  })(TSSE), TOF = (function(_super) {
    __extends(TOF, _super);

    function TOF() {
      _ref86 = TOF.__super__.constructor.apply(this, arguments);
      return _ref86;
    }

    return TOF;

  })(TOFN), TLE = (function(_super) {
    __extends(TLE, _super);

    function TLE() {
      _ref87 = TLE.__super__.constructor.apply(this, arguments);
      return _ref87;
    }

    return TLE;

  })(TLEN), TSI = (function(_super) {
    __extends(TSI, _super);

    function TSI() {
      _ref88 = TSI.__super__.constructor.apply(this, arguments);
      return _ref88;
    }

    return TSI;

  })(TSIZ), TDY = (function(_super) {
    __extends(TDY, _super);

    function TDY() {
      _ref89 = TDY.__super__.constructor.apply(this, arguments);
      return _ref89;
    }

    return TDY;

  })(TDLY), TKE = (function(_super) {
    __extends(TKE, _super);

    function TKE() {
      _ref90 = TKE.__super__.constructor.apply(this, arguments);
      return _ref90;
    }

    return TKE;

  })(TKEY), TOT = (function(_super) {
    __extends(TOT, _super);

    function TOT() {
      _ref91 = TOT.__super__.constructor.apply(this, arguments);
      return _ref91;
    }

    return TOT;

  })(TOAL), TOA = (function(_super) {
    __extends(TOA, _super);

    function TOA() {
      _ref92 = TOA.__super__.constructor.apply(this, arguments);
      return _ref92;
    }

    return TOA;

  })(TOPE), TOL = (function(_super) {
    __extends(TOL, _super);

    function TOL() {
      _ref93 = TOL.__super__.constructor.apply(this, arguments);
      return _ref93;
    }

    return TOL;

  })(TOLY), TOR = (function(_super) {
    __extends(TOR, _super);

    function TOR() {
      _ref94 = TOR.__super__.constructor.apply(this, arguments);
      return _ref94;
    }

    return TOR;

  })(TORY), TXX = (function(_super) {
    __extends(TXX, _super);

    function TXX() {
      _ref95 = TXX.__super__.constructor.apply(this, arguments);
      return _ref95;
    }

    return TXX;

  })(TXXX), COM = (function(_super) {
    __extends(COM, _super);

    function COM() {
      _ref96 = COM.__super__.constructor.apply(this, arguments);
      return _ref96;
    }

    return COM;

  })(COMM)
];

for (_j = 0, _len1 = $FRAMES_2_2.length; _j < _len1; _j++) {
  cls = $FRAMES_2_2[_j];
  FRAMES_2_2[cls] = cls;
}

Frame.FRAMES = FRAMES;

Frame.FRAMES_2_2 = FRAMES_2_2;

module.exports = {
  Frame: Frame,
  TextFrame: TextFrame,
  NumericTextFrame: NumericTextFrame,
  NumericPartTextFrame: NumericPartTextFrame,
  TimeStampTextFrame: TimeStampTextFrame
};
